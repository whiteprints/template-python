# üõ†Ô∏è Contributor Guide

Thank you for your interest in improving this project. The code is open-source
under {{ code_license_id }} license and we welcome contributions in any form.

A contibutor must respect the [Code of Conduct].

[Code of Conduct]: CODE_OF_CONDUCT.md

## How to report a problem

If you have any problem with the project please contact by email [core members].

[core members]: MAINTAINERS.md

## How to report an identified bug

Report identified bugs by email to any [core members].

When filing a bug or any other issue, make sure to answer these questions:

- Which operating system and Python version are you using?
- Which version of this project are you using?
- What did you do?
- What did you expect to see?
- What did you see instead?

The best way to get your bug fixed is to provide a test case,
and/or steps to reproduce the issue.

## How to request a feature

Request features by email to [core members].

## How to set up your development environment

You simply need [uv] and a copy of the repository.

[uv]: https://docs.astral.sh/uv/

To install python and setup your environment run

```console
uv python install
uv sync --all-extras
```

You can now run an interactive Python session:

```console
uv run python
```

If you whish to use a specific Python version you can use

```console
uv python pin ...
```

Please see [uv]'s documentation for more advanced usage.

## How to test the project

The test suite is managed by [Tox].

Run the full test suite:

```console
tox run
```

List the available [Tox] sessions:

```console
tox list
```

You can also run a specific [Tox] session.
For example, invoke the unit test suite like this:

```console
tox run -m test
```

Unit tests are located in the _tests_ directory,
and are written using the [pytest] testing framework.

[pytest]: https://docs.pytest.org/en/stable/
[Tox]: https://tox.wiki/en/stable/

Please see [Tox]'s documentation for more advanced usage.

## Project tree

Here is a list of important resources for contributors:

- The licences: located in the `LICENCES/` directory.
- The project source code: located in the `src/` directory.
- The tests: located in the `tests/` directory.
- The documentation source code: located in the `docs/` directory.
- `tox.ini` contains [Tox]'s configuration
- `pyproject.toml` contains the [project metadata] and the [build system]

[project metadata]: https://peps.python.org/pep-0621/
[build system]: https://peps.python.org/pep-0518/

## Tools

The project relies on the following tools for development:

- [Babel]: used for localizations and translations.
- [Bandit]: used to detect vulnerabilities in the source code.
- [Build]: used to distribute the project (create the wheel and sdist).
- [Coverage]: used to report test [code coverage].
- [pip-audit]: used to find vulnerabilities in the supply chain.
- [pre-commit]: used to identifying simple issues before submission.
- [pyright]: used for type checking and as [LSP].
- [radon]: audit the code maintainability.
- [reuse]: check the licenses compliance.
- [ruff]: check and fix the Python's code format and syntax.
- [cyclonedx-bom]: generate a [bill of material] of the supply chain.
- [tox]: orchestrate tools and tests.
- [tryceratops]: prevent exception handling antipatterns.
- [xenon]: check the code maintainability useing [radon].

[Babel]: https://babel.pocoo.org/en/latest/index.html
[Bandit]: https://bandit.readthedocs.io/en/latest/
[Coverage]: https://coverage.readthedocs.io/en/7.6.1/
[pip-audit]: https://github.com/pypa/pip-audit
[pre-commit]: https://pre-commit.com/
[pyright]: https://microsoft.github.io/pyright/
[radon]: https://radon.readthedocs.io/en/latest/
[reuse]: https://reuse.software/
[ruff]: https://docs.astral.sh/ruff/
[tryceratops]: https://github.com/guilatrova/tryceratops?tab=readme-ov-file
[xenon]: https://xenon.readthedocs.io/en/latest/
[cyclonedx-bom]: https://cyclonedx-bom-tool.readthedocs.io/en/latest/
[code coverage]: https://en.wikipedia.org/wiki/Code_coverage
[LSP]: https://en.wikipedia.org/wiki/Language_Server_Protocol
[bill of material]: https://en.wikipedia.org/wiki/Software_supply_chain

You may install all the tools using [uv]:

```console
uv tool install Babel
uv tool install bandit
uv tool install coverage
uv tool install pip-audit
uv tool install pre-commit
uv tool install pyright
uv tool install radon
uv tool install reuse
uv tool install ruff
uv tool install cyclonedx-bom
uv tool install tox --with "tox-uv"
uv tool install tryceratops
uv tool install xenon
```

## How to submit changes

Create a new [Git] branch to submit changes to this project.

```console
git branch -c my-contribution
```

Then commit and push your modifications on your branch.

Your contribution needs to meet the following guidelines for acceptance:

- The [Tox test suite must pass without errors and warnings.
- Include unit tests. This project maintains 100% code coverage.
- If your changes add functionality, update the [Documentation] accordingly.

Feel free to submit early, though‚Äîwe can always iterate on this.

To run linting and code formatting checks before committing your change, you
can install [pre-commit] as a Git hook by running the following command:

```console
pre-commit install
```

It is recommended to contact [core members] before starting work on anything. This
will allow a chance to talk it over with the owners and validate your approach.

Once your contribution is ready ask one of the [core members] to merge it on
the main branch.

[Git]: https://git-scm.com/
