[build-system]
build-backend = "hatchling.build"

requires = [
    "hatch-fancy-pypi-readme>=24.1.0",
    "hatch-vcs>=0.4.0",
    "hatchling>=1.26.0",
]

[project]
name = "{{ project_slug }}"
dynamic = ["version", "readme"]
description = "{{ description }}"
keywords = [
    "Python",
]

maintainers = [
    { name = "{{ author }}", email = "{{ organisation_email }}" },
]
authors = [
    { name = "{{ author }}", email = "{{ organisation_email }}" },
]
requires-python = ">={{ target_python }},<4.0"
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Framework :: Pytest",
    "Framework :: Sphinx",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
{%- for i in range(target_python_version[3:] | int, latest_python + 1) %}
    "Programming Language :: Python :: 3.{{ i }}",
{%- endfor %}
    "Typing :: Typed",
{%- if code_license_id == '' or resources_license_id == '' %}
    "Private :: Do Not Upload",
{%- endif %}
]
dependencies = [
    "distro>=1.9.0",
{%- if target_python_version[3:] | int < 10 %}
    "importlib-metadata>=8.5.0; python_full_version<'3.10'",
{%- endif %}
{%- if target_python_version[3:] | int < 12 %}
    "typing-extensions>=4.12.2; python_full_version<'3.12'",
{%- endif %}
]

{%- if code_license_id != "" %}
license = "{{ code_license_id }}"
{%- else %}
license = "LicenseRef-PROPRIETARY"
{%- endif %}

[dependency-groups]
dev = [
    { include-group = "audit-maintainability" },
    { include-group = "audit-vulnerabilities" },
    { include-group = "check-exceptions" },
    { include-group = "check-maintainability" },
    { include-group = "coverage" },
    { include-group = "editor" },
    { include-group = "lint" },
    { include-group = "localization" },
    { include-group = "profile" },
    { include-group = "serve-documentation" },
    { include-group = "tests" },
]

tests = [
    "beartype>=0.18.5",
    "hypothesis>=6.110.1",
    "pytest>=8.3.2",
    "pytest-cov>=5",
    "pytest-html>=4.1.1",
    "pytest-md-report>=0.6.2",
    "pytest-randomly>=3.15",
    "pytest-xdist>=3.6.1",
    "xdoctest[colors]>=1.2.0",
]
editor = [
    "pynvim>=0.4.3",
]
profile = [
    "scalene>=1.5.19",
]
lint = [
    "pylint>=3.2.6",
    { include-group = "tests" },
]
check-types = [
    "pyright>=1.1.386",
    { include-group = "tests" },
]
coverage = [
    "coverage>=7.6.1",
]
audit-vulnerabilities = [
    "pip-audit>=2.7.3",
]
audit-maintainability = [
    "radon>=6.0.1",
]
check-exceptions = [
    "tryceratops>=2.4",
]
check-maintainability = [
    "xenon>=0.9.3",
]
check-vulnerabilities = [
    "bandit>=1.7.10",
]
build-documentation = [
    "myst-parser[linkify]>=3.0.1",
    "pydata-sphinx-theme>=0.16.0",
    "sphinx>=7.4.7",
    "sphinx-autoapi>=3.3.3",
    "sphinx-click>=6.0.0",
    "sphinx-copybutton>=0.5.2",
    "sphinxcontrib-napoleon>=0.7.0",
    "sphinxcontrib-spelling>=8.0.0",
]
serve-documentation = [
    "sphinx-autobuild>=2024.10.3",
    { include-group = "build-documentation" },
]
localization = [
    "babel>=2.16",
]

[tool.pyproject-fmt]
column_width = 79
indent = 4
keep_full_version = true
max_supported_python = "3.{{ latest_python }}"
